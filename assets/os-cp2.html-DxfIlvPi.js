import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,f as l,g as t,o as h}from"./app-gu2odQzq.js";const e={};function k(p,s){return h(),n("div",null,[s[0]||(s[0]=i("h1",{id:"【raymond-os】chapter-2-loader的加载",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#【raymond-os】chapter-2-loader的加载"},[i("span",null,"【Raymond-OS】Chapter 2. Loader的加载")])],-1)),s[1]||(s[1]=i("p",null,"Loader的加载",-1)),l(" more "),s[2]||(s[2]=t(`<div class="hint-container info"><p class="hint-container-title">主要内容</p><p>MBR 贫瘠的 512B 空间放不下操作系统，只能化身跳板引出 Loader，将 Loader 从磁盘中读入内存后，MBR 使用 jmp 即可完成交接</p></div><h2 id="一、过程分析" tabindex="-1"><a class="header-anchor" href="#一、过程分析"><span>一、过程分析</span></a></h2><ul><li>由实模式的内存布局可知 [0x500,0x7C00) 之间是可用区域，我们在此区间内则一良址安置 Loader，暂定 0x900</li><li>Loader 内容目前很少，从磁盘中读一扇区的数据即可。已知 MBR 是磁盘的第一扇区，那 Loader 自然会放在第二扇区，我们有工具可以帮助完成这部分数据写入</li><li>Loader 加载完毕后，MBR 中直接 jmp 跳转即可以移交控制权给 Loader</li></ul><h2 id="二、核心代码" tabindex="-1"><a class="header-anchor" href="#二、核心代码"><span>二、核心代码</span></a></h2><p>我们建立一个 boot.inc 文件来存放一些常量</p><div class="language-asm line-numbers-mode" data-highlighter="shiki" data-ext="asm" data-title="asm" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">LOADER_BASE_ADDR </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">equ</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x900</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">LOADER_START_SECTOR </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">equ</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>mbr 文件是本章的重点，代码中有详细注释</p><div class="language-asm line-numbers-mode" data-highlighter="shiki" data-ext="asm" data-title="asm" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">; 主引导程序</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;-----------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">%</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;boot.inc&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SECTION MBR vstart=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x7c00</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;初始化一些寄存器信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">init:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">										</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">cs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">ax</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> es</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">ax</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">ax</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">ax</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x7c00</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xb800</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> gs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">ax</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;清屏调用10中断打印MBR证明我们来过</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">clean:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0600h</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> bx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0700h</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> cx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;">0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">184fh</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10h</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 显示&quot;MBR&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">gs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], &#39;M&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">gs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x01</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xA4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">gs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x02</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], &#39;B&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">gs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x03</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xA4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">gs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x04</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], &#39;R&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">gs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x05</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xA4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, LOADER_START_SECTOR            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;eax中存放要读取的扇区号，即Loader所在的第二扇区</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> bx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, LOADER_BASE_ADDR                </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;bx中存放Loader需要加载到的地址，即0x900</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> cx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;">1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                               ;cx中存放的是要读取的扇区数，如前文所述，读1扇区就能把Loader加载完毕</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rd_disk_m_16                       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;加载Loader</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    jmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> LOADER_BASE_ADDR                    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;跳到0x900开始执行Loader</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rd_disk_m_16:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                           ;eax中需要写入读到数据后写到内存的地址</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> esi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">eax</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> di</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">cx</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                     </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1f2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                       ;将读取的扇区数同步到响应寄存器。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                        ;primary通道相关的寄存器都是0x1f?, secondary通道相关的则是0x17?，这里我们选择主通道</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> al</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">cl</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                          ;这里其实是想把“读取扇区数”写入到硬盘控制器的0x1f2端口，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                        ;但是这个数据规定了必须是从al中读取后才能执行后续写操作，所以这里需要把“读取扇区数”写入al</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    out</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">al</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                          ;将al中的值写入到硬盘控制器的端口，端口号从dx中获取</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;=======================================</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;LBA扇区号，接下来会以LBA28方式读取扇区数据</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;LBA28读取数据时：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 1. 首先需要分三次把低24位地址分别写入到三个硬盘控制器端口</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 2. 将剩余4位地址配合对应的控制信息，写入到device控制器</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;=======================================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">esi</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1f3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                       ;取低8位写入0x1f3即LBA Low</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    out</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">al</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    shr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;">8</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                          ;右移8位，此时的低8位代表的是完整地址中的中8为，写入LBA Mid</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1f4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    out</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">al</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    shr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;">8</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                          ;与之前相同的逻辑，数据写入LBA Heigh</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1f5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    out</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">al</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;=======================================</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;最后组装device寄存器数据。device寄存器结构：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 1. 低四位是LBA地址的24-27位</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 2. 第4位0代表master盘，1代表slave盘</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 3. 第6位1代表LBA方式，0代表CHS方式</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 4. 第5位和第7位固定为1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;=======================================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    shr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> eax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;">8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> al</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x0f</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">; 只保留4位</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    or</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> al</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0xe0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">; 设置驱动器号</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1f6</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    out</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">al</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;发出读指令</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1f7</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> al</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x20</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    out</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">al</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 等待硬盘准备好数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wait:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    nop</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;检查数据状态时，status寄存器端口仍然是0x1f7，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;所谓检查数据状态，就是轮询读取寄存器数据检查状态位</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> al</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">dx</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> al</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x88</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    cmp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> al</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x08</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    jnz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">wait</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ; 将数据从硬盘缓冲区读取到内存</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;cx是循环计数，256会指定后面的loop执行256次</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ;为什么是256呢？我们读512字节的数据，读命令每次读一个字=2字节，所有就是256次</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> cx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;">256</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0x1f0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">read:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ax</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">dx</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                           ;从dx指定的端口，即之前设置的0x1f0读一个字的数据到ax中                        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    mov</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">bx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">ax</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                        ;将ax中数据写入bx指向的地址中，bx中的地址应为我们loader需要放置的地址</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> bx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;">2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                           ;地址+2，因为写了2字节的数据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    loop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .read                          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;循环一次cx会自动减一，直到cx为0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    ret</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">times</span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;"> 510</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-($-$$) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">db</span><span style="--shiki-light:#986801;--shiki-dark:#C678DD;"> 0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">dw</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0xAA55</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Loader 中也只是打印 LOADER 证明我们来过</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>%include &quot;boot.inc&quot;</span></span>
<span class="line"><span>section loader vstart=LOADER_BASE_ADDR</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mov byte [gs:0x00], &#39;L&#39;</span></span>
<span class="line"><span>mov byte [gs:0x01], 0xA4</span></span>
<span class="line"><span>mov byte [gs:0x02], &#39;O&#39;</span></span>
<span class="line"><span>mov byte [gs:0x03], 0xA4</span></span>
<span class="line"><span>mov byte [gs:0x04], &#39;A&#39;</span></span>
<span class="line"><span>mov byte [gs:0x05], 0xA4</span></span>
<span class="line"><span>mov byte [gs:0x06], &#39;D&#39;</span></span>
<span class="line"><span>mov byte [gs:0x07], 0xA4</span></span>
<span class="line"><span>mov byte [gs:0x08], &#39;E&#39;</span></span>
<span class="line"><span>mov byte [gs:0x09], 0xA4</span></span>
<span class="line"><span>mov byte [gs:0x0a], &#39;R&#39;</span></span>
<span class="line"><span>mov byte [gs:0x0b], 0xA4</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jmp $</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、相关内容" tabindex="-1"><a class="header-anchor" href="#三、相关内容"><span>三、相关内容</span></a></h2><h3 id="_3-1-pata-与-sata" tabindex="-1"><a class="header-anchor" href="#_3-1-pata-与-sata"><span>3.1 PATA 与 SATA</span></a></h3><p>机械硬盘这种磁盘旋转、磁头读数的方式是由 IBM 提出的温彻斯特技术，机械硬盘的主流转速一直都是 7200 转/分钟，寻道时间是机械硬盘性能瓶颈所在。<br> 类似于显卡控制显示器，硬盘也有对应的硬盘控制器，不过硬盘控制器和硬盘集成到了一起，所以这种设备接口就称为 IDE（intergrated device electronics， 集成设备电路），后来有了一个正式的名字 ATA（advanced technology attachment），后来除了串口接口 serial ATA 叫 SATA，对应的原来的 parallel ATA 就叫 PATA</p><div class="hint-container tip"><p class="hint-container-title">为什么 SATA 比 PATA 快</p><p>简单理解为在高速传输的环境中，并行信号间的干扰会极大限制传输速度上限，所以串行反而比并行的上限高</p></div><details class="hint-container details"><summary>传输速度的对比</summary><p>SATA I：1.5 Gbps<br> SATA II：3.0 Gbps<br> SATA III：6.0 Gbps</p><p>ATA/33：33 MB/s<br> ATA/66：66 MB/s<br> ATA/100：100 MB/s<br> ATA/133：133 MB/s</p></details><p>以前一根 PATA 线可以接两块硬盘，一台机器一般支持四块硬盘，所以当时主板上会提供两个 PATA 接口，学名叫通道，即 primary 通道和 secondary 通道，对应的，每个通道上会有 master 盘和 slave 盘。</p><h3 id="_3-2-扇区表示方式" tabindex="-1"><a class="header-anchor" href="#_3-2-扇区表示方式"><span>3.2 扇区表示方式</span></a></h3><p>磁盘上对于扇区的定位可以用“柱面-磁头-扇区”，这种方式叫 CHS（cylinder header sector），是一个三维的数据，此外，我们把扇区铺平成一维可以得到一个逻辑编号，这种方式叫 LBA（logic blcok address）<br> LBA 有两种方式，LBA28 即用 28 位表示地址，一个上去 512 字节，所以 LBA28 可以支持 128G 的地址空间，对应的 LBA48 可以支持 128PB</p><h3 id="_3-3-数据传输方式" tabindex="-1"><a class="header-anchor" href="#_3-3-数据传输方式"><span>3.3 数据传输方式</span></a></h3><p>数据传输主要有这么几种方式：</p><ol><li>无条件传送方式：比如寄存器、内存数据，不需要准备，直接读就行</li><li>查询传送方式：需要有状态位来标识数据是否准备完毕，准备完毕的数据才可以被传输</li><li>中断传送方式：把查询传输方式中的轮询改为中断通知，由此避免 CPU 空转</li><li>直接存储器存储方式 DMA：需要有硬件支持，DMA 直接把数据写入内存，不需要 CPU 自己再执行传输</li><li>I/O 处理机传送方式：对 CPU 屏蔽传输过程</li></ol><p>这里我们的 ATA 设备使用的是查询传送方式</p>`,22))])}const A=a(e,[["render",k],["__file","os-cp2.html.vue"]]),c=JSON.parse('{"path":"/posts/rd/os/os-cp2.html","title":"【Raymond-OS】Chapter 2. Loader的加载","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-01-20T00:00:00.000Z","category":["操作系统"],"tag":["主线"],"description":"Loader的加载","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/rd/os/os-cp2.html"}],["meta",{"property":"og:site_name","content":"山与长生"}],["meta",{"property":"og:title","content":"【Raymond-OS】Chapter 2. Loader的加载"}],["meta",{"property":"og:description","content":"Loader的加载"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-20T15:35:30.000Z"}],["meta",{"property":"article:tag","content":"主线"}],["meta",{"property":"article:published_time","content":"2025-01-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-20T15:35:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【Raymond-OS】Chapter 2. Loader的加载\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-20T15:35:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Raymond\\",\\"url\\":\\"https://avatars.githubusercontent.com/theflyingraymond\\"}]}"]]},"headers":[{"level":2,"title":"一、过程分析","slug":"一、过程分析","link":"#一、过程分析","children":[]},{"level":2,"title":"二、核心代码","slug":"二、核心代码","link":"#二、核心代码","children":[]},{"level":2,"title":"三、相关内容","slug":"三、相关内容","link":"#三、相关内容","children":[{"level":3,"title":"3.1 PATA 与 SATA","slug":"_3-1-pata-与-sata","link":"#_3-1-pata-与-sata","children":[]},{"level":3,"title":"3.2 扇区表示方式","slug":"_3-2-扇区表示方式","link":"#_3-2-扇区表示方式","children":[]},{"level":3,"title":"3.3 数据传输方式","slug":"_3-3-数据传输方式","link":"#_3-3-数据传输方式","children":[]}]}],"git":{"createdTime":1737387330000,"updatedTime":1737387330000,"contributors":[{"name":"Raymond","username":"Raymond","email":"suncheng11@meituan.com","commits":1,"url":"https://github.com/Raymond"}]},"readingTime":{"minutes":6.09,"words":1828},"filePathRelative":"posts/rd/os/os-cp2.md","localizedDate":"2025年1月20日","excerpt":"\\n<p>Loader的加载</p>\\n","autoDesc":true}');export{A as comp,c as data};
