import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,f as o,g as n,o as p}from"./app-ByHuUQlQ.js";const i={};function s(c,t){return p(),a("div",null,[t[0]||(t[0]=e("h1",{id:"chapter1-原则的由来-唯有变化才是永恒",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#chapter1-原则的由来-唯有变化才是永恒"},[e("span",null,"Chapter1 原则的由来：唯有变化才是永恒")])],-1)),t[1]||(t[1]=e("p",null,"从“变化”的角度去看设计原则",-1)),o(" more "),t[2]||(t[2]=n("<p>当我们讨论设计模式时，我们实际上默认是在OOP的大背景之下的，而所谓的OOP，即是以对象为基本粒度进行系统元素的关系构建。OOP是规则从现实世界到编程世界的映射，而无论现实世界还是编程世界，其历史经验都不断地重复证明着对象是不稳定的这一铁律。<br> 有句话讲，整个世界的问题分为四类：</p><ol><li>你知道你知道的</li><li>你不知道你知道的</li><li>你知道你不知道的</li><li>你不知道你不知道的</li></ol><p>我们在代码结构、系统架构上所做的努力，核心都是围绕第三点你知道你不知道的来构建的，而在这种情况下，行之有效又具有普适意义的方法很少，并且不可能很具象，都是一些方法论层面的东西，这就是我们常提到的设计原则：<br> ● 单一职责<br> ● 开闭原则<br> ● 里氏替换<br> ● 接口隔离<br> ● 依赖反转<br> 结合我们对问题场景的描述，其实可以发现，这些原则其实都在处理同一件事情：假设会变，并极力控制变化的影响范围。比如单一职责，粒度约细越能控制影响范围；比如依赖反转，为后续的变化留一手。其实我一直觉得这里面的“开闭原则”有点另类，它永远不会错，因为它只是在说空话，没有实践指导意义。</p><p>而在这些方法论的指导下，对于一些开发领域场景的场景，我们积累了一些较为通用的解决方案，而这些就是我们之后要提到的具体的设计模式。无论如何，切记：模式代码是辅助解决问题的工具，不要让它成为束缚。</p>",4))])}const d=r(i,[["render",s],["__file","chapter1.html.vue"]]),h=JSON.parse('{"path":"/posts/rd/design-pattern/chapter1.html","title":"Chapter1 原则的由来：唯有变化才是永恒","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-26T00:00:00.000Z","category":["设计模式"],"description":"从“变化”的角度去看设计原则","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/rd/design-pattern/chapter1.html"}],["meta",{"property":"og:site_name","content":"孤独星球漫游"}],["meta",{"property":"og:title","content":"Chapter1 原则的由来：唯有变化才是永恒"}],["meta",{"property":"og:description","content":"从“变化”的角度去看设计原则"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-30T15:00:51.000Z"}],["meta",{"property":"article:published_time","content":"2024-12-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-30T15:00:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Chapter1 原则的由来：唯有变化才是永恒\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-30T15:00:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Raymond\\",\\"url\\":\\"https://avatars.githubusercontent.com/theflyingraymond\\"}]}"]]},"headers":[],"git":{"createdTime":1735570851000,"updatedTime":1735570851000,"contributors":[{"name":"suncheng11","username":"suncheng11","email":"suncheng11@meituan.com","commits":1,"url":"https://github.com/suncheng11"}]},"readingTime":{"minutes":1.75,"words":525},"filePathRelative":"posts/rd/design-pattern/chapter1.md","localizedDate":"2024年12月26日","excerpt":"\\n<p>从“变化”的角度去看设计原则</p>\\n","autoDesc":true}');export{d as comp,h as data};
